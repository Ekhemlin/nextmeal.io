AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'serverlessSpoon

  Sample SAM Template for serverlessSpoon

  '
Globals:
  Function:
    Timeout: 4
  Api:
    Cors:
      AllowMethods: '''GET,POST,OPTIONS'''
      AllowHeaders: '''content-type'''
      AllowOrigin: '''*'''
      AllowCredentials: '''*'''
Resources:
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetUserFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getUser
            Method: get
    Metadata:
      SamResourceId: GetUserFunction
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateUserFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createUser
            Method: post
    Metadata:
      SamResourceId: CreateUserFunction
  AddItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AddItemsFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addItems
            Method: post
    Metadata:
      SamResourceId: AddItemsFunction
  RemoveItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RemoveItemsFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /removeItems
            Method: post
    Metadata:
      SamResourceId: RemoveItemsFunction
  AddRecipesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AddRecipesFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addRecipes
            Method: post
    Metadata:
      SamResourceId: AddRecipesFunction
  RemoveRecipesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RemoveRecipesFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /removeRecipes
            Method: post
    Metadata:
      SamResourceId: RemoveRecipesFunction
  SearchRecipeWithQueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SearchRecipeWithQueryFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /searchRecipeWithQuery
            Method: post
    Metadata:
      SamResourceId: SearchRecipeWithQueryFunction
  SearchRecipeWithItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SearchRecipeWithItemsFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /searchRecipeWithItems
            Method: post
    Metadata:
      SamResourceId: SearchRecipeWithItemsFunction
  SearchRecipeWithInventoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SearchRecipeWithInventoryFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /searchRecipeWithInventory
            Method: post
    Metadata:
      SamResourceId: SearchRecipeWithInventoryFunction
  GetRecipesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetRecipesFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getRecipes
            Method: get
    Metadata:
      SamResourceId: GetRecipesFunction
  GetItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetItemsFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getItems
            Method: get
    Metadata:
      SamResourceId: GetItemsFunction
  GetMacrosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetMacrosFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getMacros
            Method: get
    Metadata:
      SamResourceId: GetMacrosFunction
  AddMacrosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AddMacrosFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addMacros
            Method: post
    Metadata:
      SamResourceId: AddMacrosFunction
  changeMacroGoalFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: changeMacroGoalFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /changeMacroGoals
            Method: post
    Metadata:
      SamResourceId: changeMacroGoalFunction
  ChooseRecipeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ChooseRecipeFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /chooseRecipe
            Method: post
    Metadata:
      SamResourceId: ChooseRecipeFunction
  CreateTokenFunctionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateTokenFunctionFunction
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createToken
            Method: post
    Metadata:
      SamResourceId: CreateTokenFunctionFunction
Outputs:
  ServerlessSpoonAPI:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
